/*******************************************************************************
 * Copyright (c) 2000, 2008 INRIA.
 * 
 *    This file is part of SmartTools project
 *    <a href="http://www-sop.inria.fr/smartool/">SmartTools</a>
 * 
 *     SmartTools is free software; you can redistribute it and/or modify
 *     it under the terms of the GNU Lesser General Public License as published
 *     by the Free Software Foundation; either version 2 of the License, or
 *     (at your option) any later version.
 * 
 *     SmartTools is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU Lesser General Public License for more details.
 * 
 *     You should have received a copy of the GNU Lesser General Public License
 *     along with SmartTools; if not, write to the Free Software
 *     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * 
 *     INRIA
 * 
 *******************************************************************************/
// $Id: ComponentDescription.java 3013 2010-07-15 07:37:49Z dparigot $
package inria.smarttools.core.component;

import inria.smarttools.core.util.AutoKeyHashMap;

import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.Map;

/**
 * @author <a href="mailto:Didier.Parigot@sophia.inria.fr">Didier Parigot</a>
 * @version $Revision: 3013 $
 */
public interface ComponentDescription {

	// public void createEmptyResource(String name, boolean isDocument);

	public void dispose();

	public String getAbsyntFilename();

	public Map<String, Attribute> getAttributes();

	public String getBehavior();

	public String getComponentDesc();

	public String getComponentName();
	
	public String getParentComponent();

	public String getComponentType();

	public String getContainerClassname();

	public String getContainerNamespace();

	public Map<String, String> getDependances();

	public String getDoctypeName();

	public List<String> getDocumentation();

	public String getDtdName();

	public String getFacadeClassname();

	public String getFacadeNamespace();

	public boolean getImportResources();

	public Map<String, InOut> getInOuts();

	public Map<String, Input> getInputs();

	public String getJar();

	public Map<String, String> getLmls();

	public String getNamespace();

	public Map<String, Output> getOutputs();

	public Map<String, ParserDef> getParsers();

	public String getResourceFilename();

	public String getUserFacadeClassname();

	public void process();

	public void process(InputStream message) throws IOException, Exception;

	// public void save();

	public void save(String filename) throws IOException, Exception;

	// public void save(String filename, String xsl);

	public String serialize() throws IOException, Exception;

	public void setAbsyntFilename(String v);

	public void setAttributes(AutoKeyHashMap<String, Attribute> v);

	public void setBehavior(String v);

	public void setClassLoader(ClassLoader classLoader);

	public void setComponentDesc(String v);

	public void setComponentName(String v);

	public void setComponentType(String v);

	public void setContainerClassname(String v);

	public void setContainerNamespace(String v);

	public void setDependances(Map<String, String> v);

	public void setDoctypeName(String v);

	public void setDocumentation(List<String> v);

	public void setDtdName(String v);

	public void setFacadeClassname(String v);

	public void setFacadeNamespace(String v);

	public void setImportResources(boolean v);

	public void setInOuts(AutoKeyHashMap<String, InOut> v);

	public void setInputs(AutoKeyHashMap<String, Input> v);

	public void setJar(String name);

	public void setLmls(Map<String, String> v);

	public void setNamespace(String v);

	public void setOutputs(AutoKeyHashMap<String, Output> v);

	public void setParsers(AutoKeyHashMap<String, ParserDef> v);

	public void setResourceFilename(String v);

	public void setUserFacadeClassname(String v);

	public String toString();

	public void toWsdl(String filename);

	// public void update(String elemName, String attrName, String newValue);
}
